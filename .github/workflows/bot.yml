name: Telegram Mafia Bot

on:
  workflow_dispatch:
  schedule:
    # Перезапуск каждые 6 часов (0:00, 6:00, 12:00, 18:00 UTC)
    - cron: '0 */6 * * *'
  push:
    branches: [ main ]
    paths:
      - '**/*.py'
      - 'requirements.txt'
      - '.github/workflows/**'

permissions:
  contents: read
  actions: write

concurrency:
  group: mafia-bot
  cancel-in-progress: true

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 370
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env from secret
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env

      - name: Stop existing bot processes
        run: |
          echo "Stopping any existing bot processes..."
          pkill -f "python main.py" || true
          sleep 5

      - name: Run bot with live logs
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          echo "Starting bot..."
          nohup python main.py > bot.log 2>&1 &
          BOT_PID=$!
          
          # Ждем для проверки запуска
          sleep 10
          
          # Проверяем, что бот запустился
          if ps -p $BOT_PID > /dev/null; then
            echo "Bot started successfully with PID: $BOT_PID"
            echo "Bot will run for 6 hours (21600 seconds). Streaming logs:"

            # Стримим логи в фоне, чтобы они отображались в GitHub Actions
            tail -F bot.log &
            TAIL_PID=$!

            # Ждем 6 часов (21600 секунд), параллельно tail будет писать логи
            sleep 21600

            echo "6 hours completed, stopping bot for restart..."
            kill $BOT_PID 2>/dev/null || true
            kill $TAIL_PID 2>/dev/null || true
            sleep 5
            
            echo "Bot stopped, will be restarted by scheduler"
            echo "Final bot log:"
            tail -50 bot.log
          else
            echo "Failed to start bot"
            echo "Bot log:"
            cat bot.log
            exit 1
          fi

      - name: Self-dispatch next run immediately
        if: always()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Dispatching next bot run to ensure continuous uptime..."
          curl -s -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/bot.yml/dispatches \
            -d '{"ref":"main"}'
          echo "Next run dispatched"

